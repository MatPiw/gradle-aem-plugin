plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'com.cognifide.aem.bundle'
}

group 'com.cognifide.gradle'
version '4.2.0'
description = 'Gradle AEM Plugin'
defaultTasks = ['clean', 'build', 'publishToMavenLocal']

repositories {
    jcenter()
    maven { url "https://repo.adobe.com/nexus/content/groups/public" }
}

dependencies {
    // Gradle runtime

    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.2.51"
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.2.51'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-validator:commons-validator:1.6'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.8.8'
    implementation 'org.reflections:reflections:0.9.9'
    implementation 'org.apache.jackrabbit.vault:vault-cli:3.1.24'
    implementation 'org.jsoup:jsoup:1.10.3'
    implementation 'org.samba.jcifs:jcifs:1.3.18-kohsuke-1'
    implementation 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.0.0'
    implementation 'org.zeroturnaround:zt-zip:1.11'
    implementation 'com.hierynomus:sshj:0.21.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.4'
    implementation 'org.apache.httpcomponents:httpmime:4.5.4'
    implementation 'org.osgi:org.osgi.core:6.0.0'
    implementation 'com.mitchellbosecke:pebble:2.4.0'
    implementation 'fr.jcgay.send-notification:send-notification:0.14.0'

    // OSGi runtime

    compileOnly group: 'org.osgi', name: 'osgi.cmpn', version: '6.0.0'
    compileOnly group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    compileOnly group: 'javax.jcr', name: 'jcr', version: '2.0'
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compileOnly group: 'org.apache.geronimo.specs', name: 'geronimo-atinject_1.0_spec', version: '1.0'
    compileOnly group: 'org.apache.sling', name: 'org.apache.sling.api', version: '2.16.4'
    compileOnly group: 'org.apache.sling', name: 'org.apache.sling.jcr.api', version: '2.4.0'
    compileOnly group: 'org.apache.sling', name: 'org.apache.sling.models.api', version: '1.3.6'
    compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    compileOnly group: 'com.adobe.aem', name: 'uber-jar', version: '6.4.0', classifier: 'obfuscated-apis'
    compileOnly group: 'joda-time', name: 'joda-time', version: '2.9.1'
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '13.0'
    compileOnly group: 'org.jetbrains.kotlin', name: 'kotlin-osgi-bundle', version: '1.2.51' // TODO should it be on AEM? OSGi runtime written in java?

    // Testing runtime

    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
}

aem {
    config {
        bundlePackage = "com.cognifide.gradle.aem.osgi"
    }
    bundle {
        attribute 'Import-Package', ([
                '!aQute.bnd',
                '!com.mitchellbosecke.pebble',
                '!jcifs',
                '!dorkbox',
                '!fr.jcgay',
                '!jcifs',
                '!net.schmizz.sshj',
                '!org.apache.jackrabbot.vault',
                '!org.apache.tools.ant',
                '!org.gradle',
                '!org.jsoup',
                '!org.reflections',
                '!org.zeroturnaround'
        ]).join(",") + ",*"
    }
}

gradlePlugin {
    plugins {
        base {
            id = "com.cognifide.aem.base"
            implementationClass = "com.cognifide.gradle.aem.base.BasePlugin"
        }
        pkg {
            id = "com.cognifide.aem.package"
            implementationClass = "com.cognifide.gradle.aem.pkg.PackagePlugin"
        }
        bundle {
            id = "com.cognifide.aem.bundle"
            implementationClass = "com.cognifide.gradle.aem.bundle.BundlePlugin"
        }
        instance {
            id = "com.cognifide.aem.instance"
            implementationClass = "com.cognifide.gradle.aem.instance.InstancePlugin"
        }
    }
}

processResources {
    doLast {
        file("$buildDir/resources/main/build.json") << groovy.json.JsonOutput.toJson([
                pluginVersion: project.version,
                gradleVersion: project.gradle.gradleVersion
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "short"
    }
}

test.dependsOn publishToMavenLocal
check.dependsOn publishToMavenLocal

bintray {
    user = project.properties.get('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.properties.get('bintrayKey') ?: System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven-public'
        name = 'gradle-aem-plugin'
        userOrg = 'cognifide'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Cognifide/gradle-aem-plugin.git'
        labels = ['aem', 'cq', 'vault', 'scr']
        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            vcsTag = project.version
        }
    }
    publish = true
}